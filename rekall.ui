<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>Rekall</class>
 <widget class="QMainWindow" name="Rekall">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1049</width>
    <height>557</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Rekall</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QTabWidget, QLabel, QCheckBox, QLineEdit, QPlainTextEdit, QPushButton, QSpinBox, QDoubleSpinBox, QTreeView, QHeaderView, QTabBar, QComboBox, QFrame#globalFrame, QTabBar::tab, QTreeView, QHeaderView, QDockWidget, QStatusBar, QRadioButton, QToolBox, QToolBox::tab {
	font: 						12px &quot;Calibri&quot;, &quot;Arial&quot;;
	padding:					0px;
	margin:					0px;
	min-height: 				20px;
	color: 						rgb(245, 248, 250);
	border: 					0px solid black;
}
QPushButton, QSpinBox, QDoubleSpinBox, QLineEdit, QPlainTextEdit, QCheckBox::indicator, QRadioButton::indicator, QTreeView::indicator, QComboBox, QTreeView, QHeaderView {
	border: 					1px solid rgb(55, 55, 55);
	border-radius: 		2px;
	background-color: 	rgb(71, 77, 79);
}
QSpinBox, QDoubleSpinBox, QLineEdit, QPlainTextEdit, QCheckBox {
	margin-top: 			4px;
	margin-bottom: 		4px;
}
QPushButton {
	padding: 3px;
}

QDialog, QWidget#chutier, QFrame#globalFrame, QWidget#centralwidget, QWidget#player, QWidget#timeline, QWidget#viewer {
	background-color: 	rgb(56, 61, 63);
	border:						0px solid black;
}

QFrame#globalFrameBlk {
	background-color: 	rgb(0, 0, 0);
	border:						0px solid black;
}


QLabel, QCheckBox, QRadioButton {
	color: 						rgb(245, 248, 250);
}
QLabel#peopleLabel, QLabel#chutierLabel, QLabel#chutierLabel2, QLabel#feedsLabel, QLabel#tasksLabel, QLabel#conduiteLabel, QLabel#previewLabel, QLabel#feelingLabel {
	font: 		11px;
	padding: 	5px;
	color: 		rgb(131, 135, 137);
}
QLabel#visibilityLabel, QLabel#filtersLabel, QLabel#label {
	margin-top:	10px;
	font: 			bold;
	border: 		0px solid black;
	border-top: 	1px solid white;
} 


QTabWidget::pane {
	border: 					1px solid rgb(50, 50, 50);
}
QTabWidget::tab-bar {
	left: 							0px;
}
QTabWidget#tab {
	color: red;
}
QTabBar::tab {
	min-height: 							25px; /* FIX IN SS-TAB */
	background-color: 				rgb(110, 110, 110);
	color: 									rgb(220, 220, 220);
    border-top-left-radius: 		4px;
    border-top-right-radius: 	4px;
	margin-right:						2px;
	padding-left: 						5px;
	padding-right:						5px;
}
QTabBar::tab:selected {
	background-color: 				rgb(242, 241, 237);
	color: 									black;
}
QTabBar::tab:hover {
	color: 									black;
}
QTabBar::tab:!selected {
    margin-top: 						2px;
}
QTabBar::tab:disabled {
	color: 									gray;
}


QToolBox::tab {
	background-color: 				rgb(41, 44, 45);
	color: 									rgb(194, 198, 198);
}
QToolBox::tab:selected {
	background-color: 				rgb(56, 61, 63);
}
QToolBox::tab:disabled {
	background-color: 				rgb(41, 44, 45);
	color: 									rgb(56, 61, 63);
}
QToolBox QWidget#chutierPage, QToolBox QWidget#feedPage, QToolBox QWidget#infosPage, QToolBox QWidget#conduitePage, QToolBox QWidget#tasksPage, QToolBox QWidget#peoplePage, QToolBox QWidget#previewPage {
	background-color: 				rgb(56, 61, 63);
}


QTreeView {
	background:								rgb(56, 61, 63);
	alternate-background-color: 	rgb(56, 61, 63);
	selection-background-color: 	rgb(41, 44, 45);
	gridline-color: 							rgb(56, 61, 63);
	border:										0px solid black;
}
QHeaderView {
	background: 							transparent;
	border: 									0px solid black;
	color: 										rgb(200, 200, 200);
	min-height: 								14px;
}
QHeaderView::section {
	background: 							rgb(56, 61, 63);
	border: 									0px solid transparent;
	border-bottom: 						1px solid rgb(41, 44, 45);
	font: 										10px;
}
QTreeView::item {
	min-height: 		20px;
}
QTreeView::branch:has-children:!has-siblings:closed, QTreeView::branch:closed:has-children:has-siblings {
	border-image: 	none;
	image: 					url(:/items/res_tree_close.png);
}
QTreeView::branch:open:has-children:!has-siblings, QTreeView::branch:open:has-children:has-siblings  {
	border-image: 	none;
	image: 					url(:/items/res_tree_open.png);
}




QPushButton {
	margin-left: 			6px;
}
QPushButton:hover {
	border: 					1px solid rgb(28, 124, 195);
	background-color: 	rgb(21, 91, 143);
}
QPushButton::checked, QPushButton:pressed, QCheckBox::indicator:checked, QTreeView::indicator:checked, QRadioButton::indicator:checked {
	background-color: 	rgb(0, 187, 255);
}


QCheckBox, QRadioButton {
	spacing: 					5px;
}
QCheckBox::indicator, QTreeView::indicator, QRadioButton::indicator  {
	width: 						10px;
	height: 					10px;
}


QSpinBox, QDoubleSpinBox, QLineEdit {
	padding-left	:			5px;
}
QSpinBox::up-button, QDoubleSpinBox::up-button, QSpinBox::down-button, QDoubleSpinBox::down-button {
	width: 						5px;
	padding: 					2px;
	padding-left:			3px;
	background-color: 	rgb(60, 60, 60);
	border: 					0px solid black;
	border-left:				1px solid rgb(70, 70, 70);
}
QSpinBox::up-button, QDoubleSpinBox::up-button {
    image: 						url(:/icons/res_icon_plus.png);
	border-bottom:		1px solid rgb(70, 70, 70);
}
QSpinBox::down-button, QDoubleSpinBox::down-button {
    image: 						url(:/icons/res_icon_minus.png);
}


QComboBox {
	background:			rgb(242, 241, 237);
	color: 					black;
	margin-left: 		3px;
	border-radius: 	3px;
	selection-color: 	black;
	padding-left: 		5px;
}
QComboBox::drop-down {
	width: 						10px;
	padding: 					2px;
	border: 					0px solid black;
	background-color: 	rgb(70, 70, 70);
    image: 						url(:/icons/res_icon_down.png);
}



QScrollBar:vertical, QScrollBar:horizontal {
	border: 				0px solid black;
	background: 		rgba(255, 255, 255, 32);
}
QScrollBar::handle:vertical, QScrollBar::handle:horizontal {
	border: 				0px solid black;
	background: 		rgb(161, 161, 161);
	border-radius: 	3px;
}
QScrollBar:vertical {						width: 			8px;					}
QScrollBar:horizontal {					height: 		8px;				}
QScrollBar::handle:vertical {			min-height: 8px;		}
QScrollBar::handle:horizontal {	min-width: 	8px;			}
QScrollBar::add-line:vertical, QScrollBar::add-line:hozirontal, QScrollBar::sub-line:vertical, QScrollBar::sub-line:horizontal, QScrollBar::up-arrow:vertical, QScrollBar::up-arrow:horizontal, QScrollBar::down-arrow:vertical, QScrollBar::down-arrow:horizontal {
	border: 			0px solid black;
	background: 	transparent;
	width: 				1px;
	height: 			1px;
}
QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical, QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
	background: 	none;
}


QSlider:horizontal {
	min-width: 				100px;
}
QSlider::groove:horizontal {
	border: 					0px solid transparent;
	background-color: 	rgb(70, 70, 70);
	height: 					3px;
}
QSlider::handle:horizontal {
	width: 						11px;
	height: 					10px;
	border-radius: 		5px;
	margin-top: 			-4px;
	margin-bottom: 		-4px;
	border: 					0px solid black;
	background-color: 	rgb(0, 187, 250);
}


QSplitter::handle {
	background: 	rgb(56, 61, 63);
}
QSplitter::handle:pressed {
	background: 	rgb(50, 221, 255);
 }
QSplitter::handle:horizontal	 	{	width: 	4px; }
QSplitter::handle:vertical     		{	height:	4px; }

QDockWidget {
}
QDockWidget::title {
    text-align:				center;
	background-color: 	rgb(70, 70, 70);
}


QToolButton {
	border: 					0px solid black;
	border-radius: 		3px;
	margin: 					2px;
}
QToolButton:pressed, QToolButton:checked {
	border: 					0px solid black;
    background-color: 	rgba(0, 0, 0, 20);
}


QStatusBar {
	color: 						rgb(210, 210, 210);
	border-top: 				1px solid rgb(50, 50, 50);
	background-color: 	rgb(30, 30, 30);
}
</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QVBoxLayout" name="verticalLayout_2">
    <property name="spacing">
     <number>0</number>
    </property>
    <property name="leftMargin">
     <number>0</number>
    </property>
    <property name="topMargin">
     <number>0</number>
    </property>
    <property name="rightMargin">
     <number>0</number>
    </property>
    <property name="bottomMargin">
     <number>0</number>
    </property>
    <item>
     <widget class="QSplitter" name="conduiteSplitter">
      <property name="orientation">
       <enum>Qt::Horizontal</enum>
      </property>
      <widget class="QSplitter" name="timelineSplitter">
       <property name="orientation">
        <enum>Qt::Vertical</enum>
       </property>
       <widget class="QSplitter" name="fileSplitter">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <widget class="QToolBox" name="toolBoxLeft">
         <property name="currentIndex">
          <number>0</number>
         </property>
         <property name="tabSpacing">
          <number>0</number>
         </property>
         <widget class="QWidget" name="chutierPage">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>263</width>
            <height>304</height>
           </rect>
          </property>
          <attribute name="label">
           <string>FILES</string>
          </attribute>
          <layout class="QVBoxLayout" name="verticalLayout" stretch="9999,0,0">
           <property name="spacing">
            <number>0</number>
           </property>
           <property name="leftMargin">
            <number>0</number>
           </property>
           <property name="topMargin">
            <number>0</number>
           </property>
           <property name="rightMargin">
            <number>0</number>
           </property>
           <property name="bottomMargin">
            <number>0</number>
           </property>
           <item>
            <widget class="UiTreeView" name="chutier" native="true"/>
           </item>
           <item>
            <widget class="QLabel" name="chutierLabel">
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This file explorer shows the folders synced with Rekall. A synced folder contains main and work-in-progress documents (video, texts, audio, patches, …). &lt;a href=&quot;rekall:addFolder&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#32ddff;&quot;&gt;Add them manually&lt;/span&gt;&lt;/a&gt; or drag-n-drop folders here.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="wordWrap">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="QLabel" name="chutierLabel2">
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If toggle on the &amp;quot;follow&amp;quot; icon, Rekall will monitor how this file evolves and will create &lt;a href=&quot;rekall:openSettings&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#32ddff;&quot;&gt;automatic backups&lt;/span&gt;&lt;/a&gt;. The goal of theses features is not to monitor all your activity, but only to understand thereafter how you create this masterwork!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="wordWrap">
              <bool>true</bool>
             </property>
            </widget>
           </item>
          </layout>
         </widget>
         <widget class="QWidget" name="feedPage">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>100</width>
            <height>178</height>
           </rect>
          </property>
          <attribute name="label">
           <string>EVENTS</string>
          </attribute>
          <layout class="QVBoxLayout" name="verticalLayout_3" stretch="1,9999">
           <property name="spacing">
            <number>0</number>
           </property>
           <property name="leftMargin">
            <number>0</number>
           </property>
           <property name="topMargin">
            <number>0</number>
           </property>
           <property name="rightMargin">
            <number>0</number>
           </property>
           <property name="bottomMargin">
            <number>0</number>
           </property>
           <item>
            <widget class="QLabel" name="feedsLabel">
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;If you share your Rekall project on a network drive or in a Dropbox-like folder, many people can contribute to the project. This log is the summarize of the last interactions of your collaborators.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="wordWrap">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="FeedList" name="feeds" native="true"/>
           </item>
          </layout>
         </widget>
         <widget class="QWidget" name="tasksPage">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>100</width>
            <height>248</height>
           </rect>
          </property>
          <attribute name="label">
           <string>PROCESSINGS</string>
          </attribute>
          <layout class="QVBoxLayout" name="verticalLayout_6" stretch="1,9999">
           <property name="spacing">
            <number>0</number>
           </property>
           <property name="leftMargin">
            <number>0</number>
           </property>
           <property name="topMargin">
            <number>0</number>
           </property>
           <property name="rightMargin">
            <number>0</number>
           </property>
           <property name="bottomMargin">
            <number>0</number>
           </property>
           <item>
            <widget class="QLabel" name="tasksLabel">
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body style=&quot;font-style:normal;&quot;&gt;&lt;p&gt;When you import a document, Rekall generates picture thumbnails of your documents (videos strip, audio waveforms, text previews…) ; this process can take a while. You can see here what is Rekall doing in background and if your computer becomes slow, you can &lt;a href=&quot;rekall:stopTasks&quot; style=&quot; text-decoration: underline; color:#32DDFF;&quot;&gt;stop it immediatly&lt;/a&gt;!&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="wordWrap">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <widget class="TasksList" name="tasks" native="true"/>
           </item>
          </layout>
         </widget>
         <widget class="QWidget" name="peoplePage">
          <property name="geometry">
           <rect>
            <x>0</x>
            <y>0</y>
            <width>100</width>
            <height>484</height>
           </rect>
          </property>
          <attribute name="label">
           <string>PEOPLE</string>
          </attribute>
          <layout class="QVBoxLayout" name="verticalLayout_8" stretch="1,0,9999">
           <property name="spacing">
            <number>0</number>
           </property>
           <property name="leftMargin">
            <number>3</number>
           </property>
           <property name="topMargin">
            <number>3</number>
           </property>
           <property name="rightMargin">
            <number>3</number>
           </property>
           <property name="bottomMargin">
            <number>3</number>
           </property>
           <item>
            <widget class="QLabel" name="peopleLabel">
             <property name="text">
              <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Feel free to add all the main stakeholders of the project (performers, technicians, artists…). When all these data are correctly filled up, it might help you in a few years for the revival of your project! Add people through the &lt;a href=&quot;rekall:createContact&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#32ddff;&quot;&gt;contact form&lt;/span&gt;&lt;/a&gt; or drag-n-drop people from your Contact app.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
             </property>
             <property name="wordWrap">
              <bool>true</bool>
             </property>
            </widget>
           </item>
           <item>
            <spacer name="verticalSpacer">
             <property name="orientation">
              <enum>Qt::Vertical</enum>
             </property>
             <property name="sizeType">
              <enum>QSizePolicy::Fixed</enum>
             </property>
             <property name="sizeHint" stdset="0">
              <size>
               <width>20</width>
               <height>10</height>
              </size>
             </property>
            </spacer>
           </item>
           <item>
            <widget class="QTreeWidget" name="persons">
             <property name="focusPolicy">
              <enum>Qt::NoFocus</enum>
             </property>
             <property name="alternatingRowColors">
              <bool>true</bool>
             </property>
             <property name="iconSize">
              <size>
               <width>24</width>
               <height>24</height>
              </size>
             </property>
             <property name="indentation">
              <number>0</number>
             </property>
             <property name="sortingEnabled">
              <bool>true</bool>
             </property>
             <attribute name="headerVisible">
              <bool>false</bool>
             </attribute>
             <column>
              <property name="text">
               <string>Photo</string>
              </property>
             </column>
             <column>
              <property name="text">
               <string>Name</string>
              </property>
             </column>
            </widget>
           </item>
          </layout>
         </widget>
        </widget>
        <widget class="Player" name="player" native="true">
         <property name="minimumSize">
          <size>
           <width>100</width>
           <height>100</height>
          </size>
         </property>
        </widget>
       </widget>
       <widget class="Timeline" name="timeline" native="true">
        <property name="minimumSize">
         <size>
          <width>100</width>
          <height>100</height>
         </size>
        </property>
       </widget>
      </widget>
      <widget class="QToolBox" name="toolBoxRight">
       <property name="currentIndex">
        <number>0</number>
       </property>
       <property name="tabSpacing">
        <number>5</number>
       </property>
       <widget class="QWidget" name="infosPage">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>633</width>
          <height>479</height>
         </rect>
        </property>
        <attribute name="label">
         <string>INFOS</string>
        </attribute>
        <layout class="QVBoxLayout" name="verticalLayout_7" stretch="1,9999,9999,9999,9999">
         <item>
          <widget class="QLabel" name="previewLabel">
           <property name="text">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;This panel allows you to view and edit the document properties. When you import a document in Rekall, it automaticaly analyses the available descriptors (metadatas, dates…) and the context of import (who imports, when, where, how…). As all automatic guessing processes, Rekall can make mistakes or imprecisions ; that's why it is important to check and improve these data.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="wordWrap">
            <bool>true</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="Previewer" name="preview" native="true"/>
         </item>
         <item>
          <widget class="QTreeWidget" name="metadata">
           <property name="minimumSize">
            <size>
             <width>0</width>
             <height>20</height>
            </size>
           </property>
           <property name="focusPolicy">
            <enum>Qt::NoFocus</enum>
           </property>
           <property name="editTriggers">
            <set>QAbstractItemView::DoubleClicked</set>
           </property>
           <property name="alternatingRowColors">
            <bool>false</bool>
           </property>
           <property name="indentation">
            <number>10</number>
           </property>
           <property name="animated">
            <bool>true</bool>
           </property>
           <property name="wordWrap">
            <bool>true</bool>
           </property>
           <attribute name="headerVisible">
            <bool>false</bool>
           </attribute>
           <column>
            <property name="text">
             <string notr="true">Key</string>
            </property>
           </column>
           <column>
            <property name="text">
             <string>Value</string>
            </property>
           </column>
          </widget>
         </item>
         <item>
          <widget class="QPushButton" name="metadataOpenGps">
           <property name="text">
            <string>SHOW GPS LOCATION ON A MAP</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QSlider" name="metadataSlider">
           <property name="orientation">
            <enum>Qt::Horizontal</enum>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="conduitePage">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
          <width>100</width>
          <height>449</height>
         </rect>
        </property>
        <attribute name="label">
         <string>CUES</string>
        </attribute>
        <layout class="QVBoxLayout" name="verticalLayout_5" stretch="1,9999">
         <property name="spacing">
          <number>0</number>
         </property>
         <property name="leftMargin">
          <number>0</number>
         </property>
         <property name="topMargin">
          <number>0</number>
         </property>
         <property name="rightMargin">
          <number>0</number>
         </property>
         <property name="bottomMargin">
          <number>0</number>
         </property>
         <item>
          <widget class="QLabel" name="conduiteLabel">
           <property name="text">
            <string>&lt;html&gt;&lt;head/&gt;&lt;body style=&quot;font-style:normal;&quot;&gt;&lt;p&gt;Here are listed all the cues of the project. By default, all the markers and documents of the timeline will appear in the cue list. As in all the other views of Rekall, you can filter the cues through the &lt;a href=&quot;rekall:openInspector&quot; style=&quot; text-decoration: underline; color:#32DDFF;&quot;&gt;inspector panel&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Be aware you can also &lt;a href=&quot;rekall:openNetwork&quot; style=&quot; text-decoration: underline; color:#32DDFF;&quot;&gt;synchronize&lt;/a&gt; multiple Rekall each others, allowing you to use Rekall as a real time cue sheet for performers or technical actors of your project.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="alignment">
            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
           </property>
           <property name="wordWrap">
            <bool>true</bool>
           </property>
          </widget>
         </item>
         <item>
          <widget class="Viewer" name="viewer" native="true">
           <property name="minimumSize">
            <size>
             <width>100</width>
             <height>100</height>
            </size>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
      </widget>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menuBar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1049</width>
     <height>22</height>
    </rect>
   </property>
   <widget class="QMenu" name="menuPlayback">
    <property name="title">
     <string>Playback</string>
    </property>
    <addaction name="actionPlay"/>
    <addaction name="actionRewind"/>
   </widget>
   <widget class="QMenu" name="menuWindow">
    <property name="title">
     <string>Window</string>
    </property>
    <addaction name="actionInspector"/>
   </widget>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>File</string>
    </property>
    <addaction name="actionSave"/>
   </widget>
   <widget class="QMenu" name="menuEdit">
    <property name="title">
     <string>Edit</string>
    </property>
    <addaction name="actionPaste"/>
   </widget>
   <addaction name="menuFile"/>
   <addaction name="menuEdit"/>
   <addaction name="menuPlayback"/>
   <addaction name="menuWindow"/>
  </widget>
  <action name="actionPlay">
   <property name="text">
    <string>Play/pause</string>
   </property>
   <property name="shortcut">
    <string>Space</string>
   </property>
  </action>
  <action name="actionRewind">
   <property name="text">
    <string>Rewind</string>
   </property>
   <property name="shortcut">
    <string>F</string>
   </property>
  </action>
  <action name="actionInspector">
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="text">
    <string>Inspector</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+Alt+I</string>
   </property>
  </action>
  <action name="actionSave">
   <property name="text">
    <string>Save</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+S</string>
   </property>
  </action>
  <action name="actionPaste">
   <property name="text">
    <string>Paste</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+V</string>
   </property>
  </action>
 </widget>
 <layoutdefault spacing="6" margin="11"/>
 <customwidgets>
  <customwidget>
   <class>UiTreeView</class>
   <extends>QWidget</extends>
   <header>items/uitreeview.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Timeline</class>
   <extends>QWidget</extends>
   <header>gui/timeline.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Player</class>
   <extends>QWidget</extends>
   <header>gui/player.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Viewer</class>
   <extends>QWidget</extends>
   <header>gui/viewer.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>FeedList</class>
   <extends>QWidget</extends>
   <header>tasks/feedlist.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>TasksList</class>
   <extends>QWidget</extends>
   <header>tasks/taskslist.h</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>Previewer</class>
   <extends>QWidget</extends>
   <header>gui/previewer.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections>
  <connection>
   <sender>metadata</sender>
   <signal>itemChanged(QTreeWidgetItem*,int)</signal>
   <receiver>Rekall</receiver>
   <slot>actionMetadata(QTreeWidgetItem*,int)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1036</x>
     <y>298</y>
    </hint>
    <hint type="destinationlabel">
     <x>916</x>
     <y>135</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>metadataSlider</sender>
   <signal>valueChanged(int)</signal>
   <receiver>Rekall</receiver>
   <slot>refreshMetadata()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>1024</x>
     <y>511</y>
    </hint>
    <hint type="destinationlabel">
     <x>69</x>
     <y>-62</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>metadataOpenGps</sender>
   <signal>released()</signal>
   <receiver>Rekall</receiver>
   <slot>action()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>818</x>
     <y>477</y>
    </hint>
    <hint type="destinationlabel">
     <x>1145</x>
     <y>273</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>persons</sender>
   <signal>currentItemChanged(QTreeWidgetItem*,QTreeWidgetItem*)</signal>
   <receiver>Rekall</receiver>
   <slot>personItemChanged(QTreeWidgetItem*,QTreeWidgetItem*)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>50</x>
     <y>332</y>
    </hint>
    <hint type="destinationlabel">
     <x>-71</x>
     <y>223</y>
    </hint>
   </hints>
  </connection>
 </connections>
 <slots>
  <slot>action()</slot>
  <slot>actionMetadata(QTreeWidgetItem*,int)</slot>
  <slot>refreshMetadata()</slot>
  <slot>personItemChanged(QTreeWidgetItem*,QTreeWidgetItem*)</slot>
 </slots>
</ui>
